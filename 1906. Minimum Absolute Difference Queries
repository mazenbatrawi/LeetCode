class Solution {
public:
    vector<int> minDifference(vector<int>& a, vector<vector<int>>& q) {
        int n = a.size();
        int m = q.size();
        vector<int> pos[102];
        for(int i = 0; i < n; i++){
            pos[a[i]].push_back(i);
        }
        vector<int> ans;
        for(int i = 0; i < m; i++){
            int l = q[i][0], r = q[i][1];
            vector<int> nums;
            for(int x = 1; x <= 100; x++){
                int left = lower_bound(pos[x].begin(), pos[x].end(), l) - pos[x].begin();
                if(left != pos[x].size() && pos[x][left] <= r){
                    nums.push_back(x);
                }
            }
            int ret = 1e9 + 5;
            for(int j = 0; j < nums.size() - 1; j++){
                ret = min(ret, nums[j + 1] - nums[j]);
            }
            if(ret == 1e9 + 5) ret = -1;
            ans.push_back(ret);
        }
        return ans;
    }
};
